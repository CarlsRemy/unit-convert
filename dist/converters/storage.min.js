"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Petabyte=exports.Terabyte=exports.Gigabyte=exports.Megabyte=exports.Kilobyte=exports.Byte=exports.Bit=void 0;const utils_ts_1=require("./utils.min.js"),Bit={toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:o/8,(0,utils_ts_1._convert)(o,"byte",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=8?0:o/8e3,(0,utils_ts_1._convert)(o,"kilobyte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=8e3?0:o/8e6,(0,utils_ts_1._convert)(o,"megabyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=8e6?0:o/8e9,(0,utils_ts_1._convert)(o,"gigabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=8e9?0:o/8e12,(0,utils_ts_1._convert)(o,"terabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=8e12?0:o/8e15,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Bit=Bit;const Byte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8*o,(0,utils_ts_1._convert)(o,"bit",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:o/1e3,(0,utils_ts_1._convert)(o,"kilobyte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e3?0:o/1e6,(0,utils_ts_1._convert)(o,"megabyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e6?0:o/1e9,(0,utils_ts_1._convert)(o,"gigabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e9?0:o/1e12,(0,utils_ts_1._convert)(o,"terabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e12?0:o/1e15,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Byte=Byte;const Kilobyte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8e3*o,(0,utils_ts_1._convert)(o,"bit",t)},toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e3*o,(0,utils_ts_1._convert)(o,"byte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:o/1e3,(0,utils_ts_1._convert)(o,"megabyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e3?0:o/1e6,(0,utils_ts_1._convert)(o,"gigabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e6?0:o/1e9,(0,utils_ts_1._convert)(o,"terabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e9?0:o/1e12,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Kilobyte=Kilobyte;const Megabyte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8e6*o,(0,utils_ts_1._convert)(o,"bit",t)},toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e6*o,(0,utils_ts_1._convert)(o,"byte",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e3*o,(0,utils_ts_1._convert)(o,"kilobyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e3?0:o/1e3,(0,utils_ts_1._convert)(o,"gigabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e6?0:o/1e6,(0,utils_ts_1._convert)(o,"terabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e9?0:o/1e9,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Megabyte=Megabyte;const Gigabyte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8e9*o,(0,utils_ts_1._convert)(o,"bit",t)},toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e9*o,(0,utils_ts_1._convert)(o,"byte",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e6*o,(0,utils_ts_1._convert)(o,"kilobyte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e3*o,(0,utils_ts_1._convert)(o,"megabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:o/1e3,(0,utils_ts_1._convert)(o,"terabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1e3?0:o/1e6,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Gigabyte=Gigabyte;const Terabyte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8e12*o,(0,utils_ts_1._convert)(o,"bit",t)},toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e12*o,(0,utils_ts_1._convert)(o,"byte",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e9*o,(0,utils_ts_1._convert)(o,"kilobyte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e6*o,(0,utils_ts_1._convert)(o,"megabyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e3*o,(0,utils_ts_1._convert)(o,"gigabyte",t)},toPetabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=1?0:o/1e3,(0,utils_ts_1._convert)(o,"petabyte",t)}};exports.Terabyte=Terabyte;const Petabyte={toBit:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:8e15*o,(0,utils_ts_1._convert)(o,"bit",t)},toByte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e15*o,(0,utils_ts_1._convert)(o,"byte",t)},toKilobyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e12*o,(0,utils_ts_1._convert)(o,"kilobyte",t)},toMegabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e9*o,(0,utils_ts_1._convert)(o,"megabyte",t)},toGigabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e6*o,(0,utils_ts_1._convert)(o,"gigabyte",t)},toTerabyte:(o=0,t={})=>{if(isNaN(o))throw new Error("El valor introducido no es un número válido.");return o=o<=0?0:1e3*o,(0,utils_ts_1._convert)(o,"terabyte",t)}};exports.Petabyte=Petabyte;