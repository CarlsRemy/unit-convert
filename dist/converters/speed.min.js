"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeterPerSecond=exports.MeterPerMinute=exports.MeterPerHour=exports.MeterPerDay=exports.KilometerPerSecond=exports.KilometerPerMinute=exports.KilometerPerHour=exports.KilometerPerDay=void 0;const utils_ts_1=require("./utils.min.js"),KilometerPerDay={toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r,(0,utils_ts_1._convert)(r,"meter-per-day",e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:41.6667*r,(0,utils_ts_1._convert)(r,"meter-per-hour",e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/1440,(0,utils_ts_1._convert)(r,"meter-per-minute",e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/86400,(0,utils_ts_1._convert)(r,"meter-per-second",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:24*r,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1440*r,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:86400*r,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.KilometerPerDay=KilometerPerDay;const KilometerPerHour={toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/24,(0,utils_ts_1._convert)(r,"meter-per-day",e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r,(0,utils_ts_1._convert)(r,"meter-per-hour",e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/60,(0,utils_ts_1._convert)(r,"meter-per-minute",e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/3600,(0,utils_ts_1._convert)(r,"meter-per-second",e)},toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/24,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:60*r,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:3600*r,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.KilometerPerHour=KilometerPerHour;const KilometerPerMinute={toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1440,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/60,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:60*r,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)},toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/1440,KilometerPerDay.toMeterPerDay(r,e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/60,KilometerPerDay.toMeterPerHour(r,e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r,KilometerPerDay.toMeterPerMinute(r,e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r*60,KilometerPerDay.toMeterPerSecond(r,e)}};exports.KilometerPerMinute=KilometerPerMinute;const KilometerPerSecond={toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/86400,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/3600,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/60,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/86400,KilometerPerDay.toMeterPerDay(r,e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/3600,KilometerPerDay.toMeterPerHour(r,e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r/60,KilometerPerDay.toMeterPerMinute(r,e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:1e3*r,KilometerPerDay.toMeterPerSecond(r,e)}};exports.KilometerPerSecond=KilometerPerSecond;const MeterPerDay={toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/24,(0,utils_ts_1._convert)(r,"meter-per-hour",e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1440,(0,utils_ts_1._convert)(r,"meter-per-minute",e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/86400,(0,utils_ts_1._convert)(r,"meter-per-second",e)},toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*24,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*1440,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*86400,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.MeterPerDay=MeterPerDay;const MeterPerHour={toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:24*r,(0,utils_ts_1._convert)(r,"meter-per-day",e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/60,(0,utils_ts_1._convert)(r,"meter-per-minute",e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/3600,(0,utils_ts_1._convert)(r,"meter-per-second",e)},toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*24,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*60,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*3600,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.MeterPerHour=MeterPerHour;const MeterPerMinute={toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1440,(0,utils_ts_1._convert)(r,"meter-per-day",e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/60,(0,utils_ts_1._convert)(r,"meter-per-hour",e)},toMeterPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:60*r,(0,utils_ts_1._convert)(r,"meter-per-second",e)},toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3/1440,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3/60,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3*60,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.MeterPerMinute=MeterPerMinute;const MeterPerSecond={toMeterPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/86400,(0,utils_ts_1._convert)(r,"meter-per-day",e)},toMeterPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/3600,(0,utils_ts_1._convert)(r,"meter-per-hour",e)},toMeterPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/60,(0,utils_ts_1._convert)(r,"meter-per-minute",e)},toKilometerPerDay(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3/86400,(0,utils_ts_1._convert)(r,"kilometer-per-day",e)},toKilometerPerHour(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3/3600,(0,utils_ts_1._convert)(r,"kilometer-per-hour",e)},toKilometerPerMinute(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3/60,(0,utils_ts_1._convert)(r,"kilometer-per-minute",e)},toKilometerPerSecond(r=0,e={}){if(isNaN(r))throw new Error("El valor introducido no es un número válido.");return r=0==r?0:r/1e3,(0,utils_ts_1._convert)(r,"kilometer-per-second",e)}};exports.MeterPerSecond=MeterPerSecond;